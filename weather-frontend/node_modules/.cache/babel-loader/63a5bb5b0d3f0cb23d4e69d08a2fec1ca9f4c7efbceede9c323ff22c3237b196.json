{"ast":null,"code":"var _jsxFileName = \"/home/joke/weather-frontend/src/components/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport CityAutocomplete from \"./CityAutocomplete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  const [city, setCity] = useState(\"\"); // Ciudad ingresada o seleccionada\n  const [weatherData, setWeatherData] = useState(null); // Datos del clima\n  const [error, setError] = useState(null); // Mensaje de error\n  const [isAutocompleteEnabled, setIsAutocompleteEnabled] = useState(true); // Estado del autocompletado\n\n  // Función para realizar la consulta al backend\n  const fetchWeather = async () => {\n    if (!city) {\n      setError(\"Por favor ingresa o selecciona una ciudad válida.\");\n      return;\n    }\n    try {\n      setError(null); // Reinicia el estado de error\n      const response = await axios.get(\"http://localhost:8080/api/weather\", {\n        params: {\n          city\n        }\n      });\n      setWeatherData(response.data);\n    } catch (err) {\n      setError(\"No se pudo obtener el clima. Verifica el nombre de la ciudad.\");\n      setWeatherData(null);\n    }\n  };\n\n  // Manejar el checkbox de autocompletado\n  const handleCheckboxChange = () => {\n    setIsAutocompleteEnabled(prev => !prev);\n    setCity(\"\"); // Reinicia la ciudad al cambiar el estado\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Consulta el Clima\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        marginBottom: \"10px\",\n        display: \"block\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: isAutocompleteEnabled,\n        onChange: handleCheckboxChange,\n        style: {\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), \"Activar autocompletado\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CityAutocomplete, {\n      onCitySelect: selectedCity => setCity(selectedCity),\n      isAutocompleteEnabled: isAutocompleteEnabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchWeather,\n      disabled: !city,\n      style: {\n        marginTop: \"10px\"\n      },\n      children: \"Consultar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-info\",\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weatherData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperatura: \", weatherData.main.temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Sensaci\\xF3n T\\xE9rmica: \", weatherData.main.feels_like, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Clima: \", weatherData.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"6F/GsU+2w2sH/Wf7RjVzSRyC/2I=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","axios","CityAutocomplete","jsxDEV","_jsxDEV","Weather","_s","city","setCity","weatherData","setWeatherData","error","setError","isAutocompleteEnabled","setIsAutocompleteEnabled","fetchWeather","response","get","params","data","err","handleCheckboxChange","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","display","type","checked","onChange","marginRight","onCitySelect","selectedCity","onClick","disabled","marginTop","color","name","main","temp","feels_like","weather","description","_c","$RefreshReg$"],"sources":["/home/joke/weather-frontend/src/components/Weather.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport CityAutocomplete from \"./CityAutocomplete\";\n\nconst Weather = () => {\n  const [city, setCity] = useState(\"\"); // Ciudad ingresada o seleccionada\n  const [weatherData, setWeatherData] = useState(null); // Datos del clima\n  const [error, setError] = useState(null); // Mensaje de error\n  const [isAutocompleteEnabled, setIsAutocompleteEnabled] = useState(true); // Estado del autocompletado\n\n  // Función para realizar la consulta al backend\n  const fetchWeather = async () => {\n    if (!city) {\n      setError(\"Por favor ingresa o selecciona una ciudad válida.\");\n      return;\n    }\n\n    try {\n      setError(null); // Reinicia el estado de error\n      const response = await axios.get(\"http://localhost:8080/api/weather\", {\n        params: { city },\n      });\n      setWeatherData(response.data);\n    } catch (err) {\n      setError(\"No se pudo obtener el clima. Verifica el nombre de la ciudad.\");\n      setWeatherData(null);\n    }\n  };\n\n  // Manejar el checkbox de autocompletado\n  const handleCheckboxChange = () => {\n    setIsAutocompleteEnabled((prev) => !prev);\n    setCity(\"\"); // Reinicia la ciudad al cambiar el estado\n  };\n\n  return (\n    <div className=\"weather\">\n      <h1>Consulta el Clima</h1>\n\n      {/* Checkbox para activar/desactivar autocompletado */}\n      <label style={{ marginBottom: \"10px\", display: \"block\" }}>\n        <input\n          type=\"checkbox\"\n          checked={isAutocompleteEnabled}\n          onChange={handleCheckboxChange}\n          style={{ marginRight: \"10px\" }}\n        />\n        Activar autocompletado\n      </label>\n\n      {/* Componente de autocompletado */}\n      <CityAutocomplete\n        onCitySelect={(selectedCity) => setCity(selectedCity)}\n        isAutocompleteEnabled={isAutocompleteEnabled}\n      />\n\n      {/* Botón para consultar */}\n      <button onClick={fetchWeather} disabled={!city} style={{ marginTop: \"10px\" }}>\n        Consultar\n      </button>\n\n      {/* Mostrar errores */}\n      {error && <p className=\"error\" style={{ color: \"red\" }}>{error}</p>}\n\n      {/* Mostrar resultados */}\n      {weatherData && (\n        <div className=\"weather-info\" style={{ marginTop: \"20px\" }}>\n          <h2>{weatherData.name}</h2>\n          <p>Temperatura: {weatherData.main.temp}°C</p>\n          <p>Sensación Térmica: {weatherData.main.feels_like}°C</p>\n          <p>Clima: {weatherData.weather[0].description}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Weather;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}