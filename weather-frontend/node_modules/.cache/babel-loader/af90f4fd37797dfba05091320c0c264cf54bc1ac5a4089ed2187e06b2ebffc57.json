{"ast":null,"code":"var _jsxFileName = \"/home/joke/weather-frontend/src/components/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport CityAutocomplete from \"./CityAutocomplete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  const [city, setCity] = useState(\"\"); // Ciudad ingresada por el usuario\n  const [weatherData, setWeatherData] = useState(null); // Datos del clima\n  const [error, setError] = useState(null); // Mensaje de error\n\n  const fetchWeather = async () => {\n    try {\n      setError(null);\n      const response = await axios.get(\"http://localhost:8080/api/weather\", {\n        params: {\n          city\n        }\n      });\n      setWeatherData(response.data);\n    } catch (err) {\n      setError(\"No se pudo obtener el clima. Verifica el nombre de la ciudad.\");\n      setWeatherData(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Consulta el Clima\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CityAutocomplete, {\n      onCitySelect: selectedCity => setCity(selectedCity)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weatherData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperatura: \", weatherData.main.temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Sensaci\\xF3n T\\xE9rmica: \", weatherData.main.feels_like, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Clima: \", weatherData.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"Qu9kpc/8i1iAwrHa8TtdGyZ8Km4=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","axios","CityAutocomplete","jsxDEV","_jsxDEV","Weather","_s","city","setCity","weatherData","setWeatherData","error","setError","fetchWeather","response","get","params","data","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCitySelect","selectedCity","name","main","temp","feels_like","weather","description","_c","$RefreshReg$"],"sources":["/home/joke/weather-frontend/src/components/Weather.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport CityAutocomplete from \"./CityAutocomplete\";\n\nconst Weather = () => {\n  const [city, setCity] = useState(\"\"); // Ciudad ingresada por el usuario\n  const [weatherData, setWeatherData] = useState(null); // Datos del clima\n  const [error, setError] = useState(null); // Mensaje de error\n\n  const fetchWeather = async () => {\n    try {\n      setError(null);\n      const response = await axios.get(\"http://localhost:8080/api/weather\", {\n        params: { city },\n      });\n      setWeatherData(response.data);\n    } catch (err) {\n      setError(\"No se pudo obtener el clima. Verifica el nombre de la ciudad.\");\n      setWeatherData(null);\n    }\n  };\n\n  return (\n    <div className=\"weather\">\n      <h1>Consulta el Clima</h1>\n      <CityAutocomplete onCitySelect={(selectedCity) => setCity(selectedCity)} />\n      {error && <p className=\"error\">{error}</p>}\n      {weatherData && (\n        <div className=\"weather-info\">\n          <h2>{weatherData.name}</h2>\n          <p>Temperatura: {weatherData.main.temp}°C</p>\n          <p>Sensación Térmica: {weatherData.main.feels_like}°C</p>\n          <p>Clima: {weatherData.weather[0].description}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Weather;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACtD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1C,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACFD,QAAQ,CAAC,IAAI,CAAC;MACd,MAAME,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,mCAAmC,EAAE;QACpEC,MAAM,EAAE;UAAET;QAAK;MACjB,CAAC,CAAC;MACFG,cAAc,CAACI,QAAQ,CAACG,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZN,QAAQ,CAAC,+DAA+D,CAAC;MACzEF,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKe,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBhB,OAAA;MAAAgB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BpB,OAAA,CAACF,gBAAgB;MAACuB,YAAY,EAAGC,YAAY,IAAKlB,OAAO,CAACkB,YAAY;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC1Eb,KAAK,iBAAIP,OAAA;MAAGe,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAET;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzCf,WAAW,iBACVL,OAAA;MAAKe,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BhB,OAAA;QAAAgB,QAAA,EAAKX,WAAW,CAACkB;MAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3BpB,OAAA;QAAAgB,QAAA,GAAG,eAAa,EAACX,WAAW,CAACmB,IAAI,CAACC,IAAI,EAAC,OAAE;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC7CpB,OAAA;QAAAgB,QAAA,GAAG,2BAAmB,EAACX,WAAW,CAACmB,IAAI,CAACE,UAAU,EAAC,OAAE;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACzDpB,OAAA;QAAAgB,QAAA,GAAG,SAAO,EAACX,WAAW,CAACsB,OAAO,CAAC,CAAC,CAAC,CAACC,WAAW;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CAjCID,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AAmCb,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}