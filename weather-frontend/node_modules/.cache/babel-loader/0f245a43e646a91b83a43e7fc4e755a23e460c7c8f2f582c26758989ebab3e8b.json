{"ast":null,"code":"var _jsxFileName = \"/home/joke/weather-frontend/src/components/CityAutocomplete.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Autocomplete, TextField, CircularProgress } from \"@mui/material\";\nimport debounce from \"lodash.debounce\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CityAutocomplete = ({\n  onCitySelect,\n  isAutocompleteEnabled\n}) => {\n  _s();\n  const [options, setOptions] = useState([]); // Opciones del autocompletado\n  const [loading, setLoading] = useState(false); // Estado de carga\n  const [inputValue, setInputValue] = useState(\"\"); // Valor del input\n\n  // Función para obtener ciudades desde el backend\n  const fetchCities = async input => {\n    if (!input) return;\n    setLoading(true);\n    try {\n      const response = await axios.get(\"http://localhost:8080/api/geo/cities\", {\n        params: {\n          query: input\n        }\n      });\n      const cityOptions = response.data.map(city => ({\n        label: `${city.city}, ${city.country}`,\n        value: city.city\n      }));\n      setOptions(cityOptions);\n    } catch (error) {\n      console.error(\"Error fetching cities:\", error);\n      setOptions([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Debounce para limitar llamadas a la API\n  const debouncedFetchCities = debounce(input => {\n    if (isAutocompleteEnabled) fetchCities(input);\n  }, 300);\n\n  // Maneja cambios en el input\n  const handleInputChange = (_, newValue) => {\n    setInputValue(newValue);\n    debouncedFetchCities(newValue);\n  };\n\n  // Maneja selección de una opción\n  const handleChange = (_, option) => {\n    if (option) {\n      onCitySelect(option.value); // Envía solo la ciudad al componente padre\n      setInputValue(option.label);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    options: isAutocompleteEnabled ? options : [],\n    loading: loading,\n    inputValue: inputValue,\n    onInputChange: handleInputChange,\n    onChange: handleChange,\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n      ...params,\n      label: \"Ingresa una ciudad\",\n      variant: \"outlined\",\n      fullWidth: true,\n      InputProps: {\n        ...params.InputProps,\n        endAdornment: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"inherit\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 28\n          }, this) : null, params.InputProps.endAdornment]\n        }, void 0, true)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this),\n    noOptionsText: \"Sin resultados\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(CityAutocomplete, \"wrYWOxSalb1LkmbS+EFtTLaVsYA=\");\n_c = CityAutocomplete;\nexport default CityAutocomplete;\nvar _c;\n$RefreshReg$(_c, \"CityAutocomplete\");","map":{"version":3,"names":["React","useState","axios","Autocomplete","TextField","CircularProgress","debounce","jsxDEV","_jsxDEV","Fragment","_Fragment","CityAutocomplete","onCitySelect","isAutocompleteEnabled","_s","options","setOptions","loading","setLoading","inputValue","setInputValue","fetchCities","input","response","get","params","query","cityOptions","data","map","city","label","country","value","error","console","debouncedFetchCities","handleInputChange","_","newValue","handleChange","option","onInputChange","onChange","renderInput","variant","fullWidth","InputProps","endAdornment","children","color","size","fileName","_jsxFileName","lineNumber","columnNumber","noOptionsText","_c","$RefreshReg$"],"sources":["/home/joke/weather-frontend/src/components/CityAutocomplete.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Autocomplete, TextField, CircularProgress } from \"@mui/material\";\nimport debounce from \"lodash.debounce\";\n\nconst CityAutocomplete = ({ onCitySelect, isAutocompleteEnabled }) => {\n  const [options, setOptions] = useState([]); // Opciones del autocompletado\n  const [loading, setLoading] = useState(false); // Estado de carga\n  const [inputValue, setInputValue] = useState(\"\"); // Valor del input\n\n  // Función para obtener ciudades desde el backend\n  const fetchCities = async (input) => {\n    if (!input) return;\n    setLoading(true);\n    try {\n      const response = await axios.get(\"http://localhost:8080/api/geo/cities\", {\n        params: { query: input },\n      });\n      const cityOptions = response.data.map((city) => ({\n        label: `${city.city}, ${city.country}`,\n        value: city.city,\n      }));\n      setOptions(cityOptions);\n    } catch (error) {\n      console.error(\"Error fetching cities:\", error);\n      setOptions([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Debounce para limitar llamadas a la API\n  const debouncedFetchCities = debounce((input) => {\n    if (isAutocompleteEnabled) fetchCities(input);\n  }, 300);\n\n  // Maneja cambios en el input\n  const handleInputChange = (_, newValue) => {\n    setInputValue(newValue);\n    debouncedFetchCities(newValue);\n  };\n\n  // Maneja selección de una opción\n  const handleChange = (_, option) => {\n    if (option) {\n      onCitySelect(option.value); // Envía solo la ciudad al componente padre\n      setInputValue(option.label);\n    }\n  };\n\n  return (\n    <Autocomplete\n      options={isAutocompleteEnabled ? options : []}\n      loading={loading}\n      inputValue={inputValue}\n      onInputChange={handleInputChange}\n      onChange={handleChange}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Ingresa una ciudad\"\n          variant=\"outlined\"\n          fullWidth\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <>\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </>\n            ),\n          }}\n        />\n      )}\n      noOptionsText=\"Sin resultados\"\n    />\n  );\n};\n\nexport default CityAutocomplete;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}